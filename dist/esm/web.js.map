{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,MAAO,SAAQ,SAAS;IAArC;;QACE,qBAAgB,GAAG,EAAE,CAAC;IAmCxB,CAAC;IAjCC,WAAW;QACT,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS;QACP,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,kBAAkB;QAChB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,SAAS;QACP,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,6DAA6D;IAC7D,MAAM,CAAC,KAA4B;QACjC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,OAAO;QACL,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,OAAO;QACL,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,6DAA6D;IAC7D,OAAO,CAAC,QAA8B;QACpC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAClE,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { NFCPlugin, TagResultListenerFunc } from './definitions';\n\nexport class NFCWeb extends WebPlugin implements NFCPlugin {\n  wrapperListeners = [];\n  \n  isSupported(): Promise<{ supported: boolean }> {\n    return Promise.resolve({ supported: false });\n  }\n\n  startScan(): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n\n  cancelWriteAndroid(): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n\n  writeNDEF(): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n  \n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onRead(_func: TagResultListenerFunc): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n\n  onWrite(): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n\n  lockTag(): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onError(_errorFn: (error: any) => void): Promise<void> {\n    return Promise.reject(new Error('NFC is not supported on web'));\n  }\n}"]}